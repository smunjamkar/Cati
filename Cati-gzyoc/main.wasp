app Cati {
  wasp: {
    version: "^0.11.4"
  },
  title: "Cati",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    images   Image[]
psl=}

entity Image {=psl
    id           Int            @id @default(autoincrement())
    url          String
    userId       Int
    user         User           @relation(fields: [userId], references: [id])
    ImageFeature ImageFeature[]
psl=}

entity Feature {=psl
    id           Int            @id @default(autoincrement())
    name         String         @unique
    description  String
    ImageFeature ImageFeature[]
psl=}

entity ImageFeature {=psl
    id        Int     @id @default(autoincrement())
    imageId   Int
    image     Image   @relation(fields: [imageId], references: [id])
    featureId Int
    feature   Feature @relation(fields: [featureId], references: [id])
psl=}

action createImage {
  fn: import { createImage } from "@server/actions.js",
  entities: [Image]
}

action associateFeatureToImage {
  fn: import { associateFeatureToImage } from "@server/actions.js",
  entities: [ImageFeature, Image, Feature]
}

query getImage {
  fn: import { getImage } from "@server/queries.js",
  entities: [Image, ImageFeature]
}

query getAllFeatures {
  fn: import { getAllFeatures } from "@server/queries.js",
  entities: [Feature]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route ImageRoute { path: "/image/:imageId", to: ImagePage }
page ImagePage {
  component: import { Image } from "@client/pages/Image.jsx",
  authRequired: true
}

route FeaturesRoute { path: "/features", to: FeaturesPage }
page FeaturesPage {
  component: import { Features } from "@client/pages/Features.jsx",
  authRequired: true
}
